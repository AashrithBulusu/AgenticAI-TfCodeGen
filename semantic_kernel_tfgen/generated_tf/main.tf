module "network_security_group" {
  source = "Azure/avm-res-network-networksecuritygroup/azurerm"
  version = "0.4.0"
  role_assignments = var.network_security_group_vars.role_assignments
  tags = var.network_security_group_vars.tags
  security_rules = var.network_security_group_vars.security_rules
  name = var.network_security_group_vars.name
  timeouts = var.network_security_group_vars.timeouts
  enable_telemetry = var.network_security_group_vars.enable_telemetry
  location = var.network_security_group_vars.location
  diagnostic_settings = var.network_security_group_vars.diagnostic_settings
  resource_group_name = var.network_security_group_vars.resource_group_name
  lock = var.network_security_group_vars.lock
}

module "network_interface" {
  source = "Azure/avm-res-network-networkinterface/azurerm"
  version = "0.1.0"
  application_security_group_ids = var.network_interface_vars.application_security_group_ids
  ip_configurations = var.network_interface_vars.ip_configurations
  tags = var.network_interface_vars.tags
  name = var.network_interface_vars.name
  edge_zone = var.network_interface_vars.edge_zone
  network_security_group_ids = var.network_interface_vars.network_security_group_ids
  accelerated_networking_enabled = var.network_interface_vars.accelerated_networking_enabled
  enable_telemetry = var.network_interface_vars.enable_telemetry
  location = var.network_interface_vars.location
  internal_dns_name_label = var.network_interface_vars.internal_dns_name_label
  dns_servers = var.network_interface_vars.dns_servers
  ip_forwarding_enabled = var.network_interface_vars.ip_forwarding_enabled
  application_gateway_backend_address_pool_association = var.network_interface_vars.application_gateway_backend_address_pool_association
  load_balancer_backend_address_pool_association = var.network_interface_vars.load_balancer_backend_address_pool_association
  resource_group_name = var.network_interface_vars.resource_group_name
  lock = var.network_interface_vars.lock
  nat_rule_association = var.network_interface_vars.nat_rule_association
}

module "virtual_machine" {
  source = "Azure/avm-res-azurestackhci-virtualmachineinstance/azurerm"
  version = "2.0.0"
  role_assignments = var.virtual_machine_vars.role_assignments
  tags = var.virtual_machine_vars.tags
  domain_join_extension_tags = var.virtual_machine_vars.domain_join_extension_tags
  dynamic_memory_min = var.virtual_machine_vars.dynamic_memory_min
  nic_tags = var.virtual_machine_vars.nic_tags
  data_disk_params = var.virtual_machine_vars.data_disk_params
  admin_password = var.virtual_machine_vars.admin_password
  v_cpu_count = var.virtual_machine_vars.v_cpu_count
  name = var.virtual_machine_vars.name
  os_type = var.virtual_machine_vars.os_type
  domain_to_join = var.virtual_machine_vars.domain_to_join
  http_proxy = var.virtual_machine_vars.http_proxy
  domain_join_password = var.virtual_machine_vars.domain_join_password
  logical_network_id = var.virtual_machine_vars.logical_network_id
  domain_join_user_name = var.virtual_machine_vars.domain_join_user_name
  type_handler_version = var.virtual_machine_vars.type_handler_version
  dynamic_memory_buffer = var.virtual_machine_vars.dynamic_memory_buffer
  image_id = var.virtual_machine_vars.image_id
  dynamic_memory = var.virtual_machine_vars.dynamic_memory
  domain_target_ou = var.virtual_machine_vars.domain_target_ou
  https_proxy = var.virtual_machine_vars.https_proxy
  location = var.virtual_machine_vars.location
  memory_mb = var.virtual_machine_vars.memory_mb
  secure_boot_enabled = var.virtual_machine_vars.secure_boot_enabled
  dynamic_memory_max = var.virtual_machine_vars.dynamic_memory_max
  managed_identities = var.virtual_machine_vars.managed_identities
  trusted_ca = var.virtual_machine_vars.trusted_ca
  user_storage_id = var.virtual_machine_vars.user_storage_id
  windows_ssh_config = var.virtual_machine_vars.windows_ssh_config
  auto_upgrade_minor_version = var.virtual_machine_vars.auto_upgrade_minor_version
  admin_username = var.virtual_machine_vars.admin_username
  enable_telemetry = var.virtual_machine_vars.enable_telemetry
  no_proxy = var.virtual_machine_vars.no_proxy
  linux_ssh_config = var.virtual_machine_vars.linux_ssh_config
  custom_location_id = var.virtual_machine_vars.custom_location_id
  resource_group_name = var.virtual_machine_vars.resource_group_name
  private_ip_address = var.virtual_machine_vars.private_ip_address
  lock = var.virtual_machine_vars.lock
}

module "load_balancer" {
  source = "Azure/avm-res-network-loadbalancer/azurerm"
  version = "0.4.0"
  role_assignments = var.load_balancer_vars.role_assignments
  lb_rules = var.load_balancer_vars.lb_rules
  tags = var.load_balancer_vars.tags
  lb_probes = var.load_balancer_vars.lb_probes
  backend_address_pool_addresses = var.load_balancer_vars.backend_address_pool_addresses
  lb_nat_pools = var.load_balancer_vars.lb_nat_pools
  diagnostic_settings = var.load_balancer_vars.diagnostic_settings
  public_ip_address_configuration = var.load_balancer_vars.public_ip_address_configuration
  sku = var.load_balancer_vars.sku
  name = var.load_balancer_vars.name
  lb_nat_rules = var.load_balancer_vars.lb_nat_rules
  backend_address_pool_network_interfaces = var.load_balancer_vars.backend_address_pool_network_interfaces
  frontend_subnet_resource_id = var.load_balancer_vars.frontend_subnet_resource_id
  frontend_ip_configurations = var.load_balancer_vars.frontend_ip_configurations
  edge_zone = var.load_balancer_vars.edge_zone
  location = var.load_balancer_vars.location
  backend_address_pool_configuration = var.load_balancer_vars.backend_address_pool_configuration
  backend_address_pools = var.load_balancer_vars.backend_address_pools
  lb_outbound_rules = var.load_balancer_vars.lb_outbound_rules
  enable_telemetry = var.load_balancer_vars.enable_telemetry
  resource_group_name = var.load_balancer_vars.resource_group_name
  lock = var.load_balancer_vars.lock
  sku_tier = var.load_balancer_vars.sku_tier
}

module "storage_account" {
  source = "Azure/avm-res-storage-storageaccount/azurerm"
  version = "0.6.2"
  role_assignments = var.storage_account_vars.role_assignments
  tags = var.storage_account_vars.tags
  diagnostic_settings_queue = var.storage_account_vars.diagnostic_settings_queue
  access_tier = var.storage_account_vars.access_tier
  diagnostic_settings_file = var.storage_account_vars.diagnostic_settings_file
  shared_access_key_enabled = var.storage_account_vars.shared_access_key_enabled
  name = var.storage_account_vars.name
  immutability_policy = var.storage_account_vars.immutability_policy
  network_rules = var.storage_account_vars.network_rules
  storage_management_policy_timeouts = var.storage_account_vars.storage_management_policy_timeouts
  queue_properties = var.storage_account_vars.queue_properties
  default_to_oauth_authentication = var.storage_account_vars.default_to_oauth_authentication
  diagnostic_settings_table = var.storage_account_vars.diagnostic_settings_table
  local_user = var.storage_account_vars.local_user
  static_website = var.storage_account_vars.static_website
  diagnostic_settings_blob = var.storage_account_vars.diagnostic_settings_blob
  table_encryption_key_type = var.storage_account_vars.table_encryption_key_type
  account_replication_type = var.storage_account_vars.account_replication_type
  sftp_enabled = var.storage_account_vars.sftp_enabled
  storage_management_policy_rule = var.storage_account_vars.storage_management_policy_rule
  tables = var.storage_account_vars.tables
  cross_tenant_replication_enabled = var.storage_account_vars.cross_tenant_replication_enabled
  allow_nested_items_to_be_public = var.storage_account_vars.allow_nested_items_to_be_public
  edge_zone = var.storage_account_vars.edge_zone
  private_endpoints_manage_dns_zone_group = var.storage_account_vars.private_endpoints_manage_dns_zone_group
  location = var.storage_account_vars.location
  public_network_access_enabled = var.storage_account_vars.public_network_access_enabled
  blob_properties = var.storage_account_vars.blob_properties
  containers = var.storage_account_vars.containers
  account_tier = var.storage_account_vars.account_tier
  allowed_copy_scope = var.storage_account_vars.allowed_copy_scope
  timeouts = var.storage_account_vars.timeouts
  infrastructure_encryption_enabled = var.storage_account_vars.infrastructure_encryption_enabled
  large_file_share_enabled = var.storage_account_vars.large_file_share_enabled
  managed_identities = var.storage_account_vars.managed_identities
  is_hns_enabled = var.storage_account_vars.is_hns_enabled
  shares = var.storage_account_vars.shares
  sas_policy = var.storage_account_vars.sas_policy
  routing = var.storage_account_vars.routing
  storage_data_lake_gen2_filesystem = var.storage_account_vars.storage_data_lake_gen2_filesystem
  https_traffic_only_enabled = var.storage_account_vars.https_traffic_only_enabled
  diagnostic_settings_storage_account = var.storage_account_vars.diagnostic_settings_storage_account
  customer_managed_key = var.storage_account_vars.customer_managed_key
  min_tls_version = var.storage_account_vars.min_tls_version
  custom_domain = var.storage_account_vars.custom_domain
  azure_files_authentication = var.storage_account_vars.azure_files_authentication
  enable_telemetry = var.storage_account_vars.enable_telemetry
  queue_encryption_key_type = var.storage_account_vars.queue_encryption_key_type
  account_kind = var.storage_account_vars.account_kind
  nfsv3_enabled = var.storage_account_vars.nfsv3_enabled
  storage_data_lake_gen2_filesystems = var.storage_account_vars.storage_data_lake_gen2_filesystems
  resource_group_name = var.storage_account_vars.resource_group_name
  share_properties = var.storage_account_vars.share_properties
  queues = var.storage_account_vars.queues
  lock = var.storage_account_vars.lock
  private_endpoints = var.storage_account_vars.private_endpoints
}

module "sql_server" {
  source = "Azure/avm-res-sql-server/azurerm"
  version = "0.1.4"
  role_assignments = var.sql_server_vars.role_assignments
  tags = var.sql_server_vars.tags
  administrator_login_password = var.sql_server_vars.administrator_login_password
  outbound_network_restriction_enabled = var.sql_server_vars.outbound_network_restriction_enabled
  transparent_data_encryption_key_vault_key_id = var.sql_server_vars.transparent_data_encryption_key_vault_key_id
  diagnostic_settings = var.sql_server_vars.diagnostic_settings
  server_version = var.sql_server_vars.server_version
  administrator_login = var.sql_server_vars.administrator_login
  name = var.sql_server_vars.name
  connection_policy = var.sql_server_vars.connection_policy
  azuread_administrator = var.sql_server_vars.azuread_administrator
  elastic_pools = var.sql_server_vars.elastic_pools
  private_endpoints_manage_dns_zone_group = var.sql_server_vars.private_endpoints_manage_dns_zone_group
  databases = var.sql_server_vars.databases
  firewall_rules = var.sql_server_vars.firewall_rules
  location = var.sql_server_vars.location
  public_network_access_enabled = var.sql_server_vars.public_network_access_enabled
  managed_identities = var.sql_server_vars.managed_identities
  enable_telemetry = var.sql_server_vars.enable_telemetry
  resource_group_name = var.sql_server_vars.resource_group_name
  primary_user_assigned_identity_id = var.sql_server_vars.primary_user_assigned_identity_id
  lock = var.sql_server_vars.lock
  private_endpoints = var.sql_server_vars.private_endpoints
}

